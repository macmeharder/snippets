{
  "react stateless component": {
    "prefix": "rsc",
    "body": "export const ${TM_FILENAME_BASE:/uppercase} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
    "description": "Creates a React stateless component"
  },
  "jsx element": {
    "prefix": "j",
    "body": "<${1}>\n\t$0\n</${1}>",
    "description": "an element"
  },
  "jsx element self closed": {
    "prefix": "jc",
    "body": "<${1} />",
    "description": "an element self closed"
  },
  "useState": {
    "prefix": "us",
    "body": ["const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2);$0"],
    "description": "React useState() hook"
  },
  "useEffect": {
    "prefix": "ue",
    "body": [
      "useEffect(() => {",
      "\t$1",
      "\n\treturn () => {",
      "\t\t$2",
      "\t}",
      "}, [${3}]);$0"
    ],
    "description": "React useEffect() hook"
  },
  "useCallback": {
    "prefix": "uc",
    "body": [
      "const ${1:memoizedCallback} = useCallback(",
      "\t() => {",
      "\t\t${2:doSomething}(${3:a}, ${4:b})",
      "\t},",
      "\t[${5:a}, ${6:b}],",
      ");$0"
    ],
    "description": "React useCallback() hook"
  },
  "useMemo": {
    "prefix": "um",
    "body": [
      "const ${1:memoizedValue} = useMemo(() => ${2:computeExpensiveValue}(${3:a}, ${4:b}), [${5:a}, ${6:b}]);$0"
    ],
    "description": "React useMemo() hook"
  },
  "useRef": {
    "prefix": "ur",
    "body": ["const $1 = useRef($2);$0"],
    "description": "React useRef() hook"
  }
}
